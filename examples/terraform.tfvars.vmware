
// e-mail address used to login to Tectonic
tectonic_admin_email = ""

// bcrypt hash of admin password to use with Tectonic Console
tectonic_admin_password_hash = ""

// The base DNS domain of the cluster. Example: `openstack.dev.coreos.systems`.
tectonic_base_domain = ""

// (optional) PEM-encoded CA certificate, used to generate Tectonic Console's server certificate. Optional, if left blank, a CA certificate will be automatically generated.
// tectonic_ca_cert = ""

// (optional) PEM-encoded CA key, used to generate Tectonic Console's server certificate. Optional if tectonic_ca_cert is left blank
// tectonic_ca_key = ""

// Algorithm used to generate tectonic_ca_key. Optional if tectonic_ca_cert is left blank.
tectonic_ca_key_alg = "RSA"

// The Container Linux update channel.
// Examples: `stable`, `beta`, `alpha`
tectonic_cl_channel = "stable"

// A CIDR notation IP range from which to assign pod IPs
tectonic_cluster_cidr = "10.2.0.0/16"

// The name of the cluster. This will be prepended to `tectonic_base_domain` resulting in the URL to the Tectonic console.
tectonic_cluster_name = ""

// (optional) The path to the etcd CA certificate for TLS communication with etcd.
// tectonic_etcd_ca_cert_path = ""

// (optional) The path to the etcd client certificate for TLS communication with etcd.
// tectonic_etcd_client_cert_path = ""

// (optional) The path to the etcd client key for TLS communication with etcd.
// tectonic_etcd_client_key_path = ""

// The number of etcd nodes to be created.
// If set to zero, the count of etcd nodes will be determined automatically (currently only supported on AWS).
tectonic_etcd_count = "0"

// (optional) List of external etcd v3 servers to connect with (hostnames/IPs only).
// Needs to be set if using an external etcd cluster.
// Example: `["etcd1", "etcd2", "etcd3"]`
// tectonic_etcd_servers = ""

// If set to true, experimental Tectonic assets are being deployed.
tectonic_experimental = false

// Service IP used to reach kube-apiserver inside the cluster
tectonic_kube_apiserver_service_ip = "10.3.0.1"

// Service IP used to reach kube-dns
tectonic_kube_dns_service_ip = "10.3.0.10"

// Service IP used to reach self-hosted etcd
tectonic_kube_etcd_service_ip = "10.3.0.15"

// The path to the tectonic licence file.
tectonic_license_path = ""

// The number of master nodes to be created.
tectonic_master_count = "1"

// The path the pull secret file in JSON format.
tectonic_pull_secret_path = ""

// A CIDR notation IP range from which to assign service cluster IPs
tectonic_service_cidr = "10.3.0.0/16"

// If set to true, a vanilla Kubernetes cluster will be deployed, omitting the tectonic assets.
tectonic_vanilla_k8s = false

// vCenter Cluster used to create VMs under
tectonic_vmware_cluster = ""

// The domain name which resolves to controller node(s)
tectonic_vmware_controller_domain = ""

// Virtual DataCenter to deploy VMs
tectonic_vmware_datacenter = ""

// Datastore to deploy Tectonic
tectonic_vmware_datastore = ""

// Default Gateway IP address for etcd nodes(s)
tectonic_vmware_etcd_gateway = ""

// Terraform map of etcd node(s) Hostnames, Example: 
//   tectonic_vmware_etcd_hostnames = {
//   "0" = "mycluster-etcd-0"
//   "1" = "mycluster-etcd-1"
//   "2" = "mycluster-etcd-2"
// }
tectonic_vmware_etcd_hostnames = ""

// Terraform map of etcd node(s) IP Addresses, Example: 
//   tectonic_vmware_etcd_ip = {
//   "0" = "192.168.246.10/24"
//   "1" = "192.168.246.11/24"
//   "2" = "192.168.246.12/24"
// }
tectonic_vmware_etcd_ip = ""

// etcd node(s) VM Memory Size in MB
tectonic_vmware_etcd_memory = "4096"

// etcd node(s) VM vCPU count
tectonic_vmware_etcd_vcpu = "1"

// vSphere Folder to create and add the Tectonic nodes
tectonic_vmware_folder = ""

// The domain name which resolves to Tectonic Ingress (i.e. worker node(s))
tectonic_vmware_ingress_domain = ""

// Default Gateway IP address for Master nodes(s)
tectonic_vmware_master_gateway = ""

// Terraform map of Master node(s) Hostnames, Example: 
//   tectonic_vmware_master_hostnames = {
//   "0" = "mycluster-master-0"
//   "1" = "mycluster-master-1"
// }
tectonic_vmware_master_hostnames = ""

// Terraform map of Master node(s) IP Addresses, Example: 
//   tectonic_vmware_vm_masterips = {
//   "0" = "192.168.246.20/24"
//   "1" = "192.168.246.21/24"
// }
tectonic_vmware_master_ip = ""

// Master node(s) Memory Size in MB
tectonic_vmware_master_memory = "4096"

// Master node(s) vCPU count
tectonic_vmware_master_vcpu = "1"

// Portgroup to attach the cluster nodes
tectonic_vmware_network = ""

// DNS Server to be useddd by Virtual Machine(s)
tectonic_vmware_node_dns = ""

// Password to Use
tectonic_vmware_password = ""

// vCenter Server IP/FQDN
tectonic_vmware_server = ""

// SSH public key to use as an authorized key. Example: `"ssh-rsa AAAB3N..."`
tectonic_vmware_ssh_authorized_key = ""

// Is the vCenter certificate Self-Signed? Example: `tectonic_vmware_sslselfsigned = "true"`
tectonic_vmware_sslselfsigned = ""

// Username to Use to connect to vCenter
tectonic_vmware_username = "Administrator@vsphere.local"

// Virtual Machine template of CoreOS Container Linux.
tectonic_vmware_vm_template = ""

// Folder for VM template of CoreOS Container Linux.
tectonic_vmware_vm_template_folder = ""

// Default Gateway IP address for Master nodes(s)
tectonic_vmware_worker_gateway = ""

// Terraform map of Worker node(s) Hostnames, Example: 
//   tectonic_vmware_vm_worker_hostnames = {
//   "0" = "mycluster-worker-0"
//   "1" = "mycluster-worker-1"
// }
tectonic_vmware_worker_hostnames = ""

// Terraform map of Worker node(s) IP Addresses, Example: 
//   tectonic_vmware_vm_workerips = {
//   "0" = "192.168.246.30/24"
//   "1" = "192.168.246.31/24"
// }
tectonic_vmware_worker_ip = ""

// Worker node(s) Memory Size in MB
tectonic_vmware_worker_memory = "4096"

// Worker node(s) vCPU count
tectonic_vmware_worker_vcpu = "1"

// The number of worker nodes to be created.
tectonic_worker_count = "3"
